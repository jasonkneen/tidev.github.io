(window.webpackJsonp=window.webpackJsonp||[]).push([[839],{1655:function(t,a,e){"use strict";e.r(a);var s=e(21),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"alloy-sync-adapters-and-migrations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#alloy-sync-adapters-and-migrations"}},[t._v("#")]),t._v(" Alloy Sync Adapters and Migrations")]),t._v(" "),e("h2",{attrs:{id:"sync-adapters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync-adapters"}},[t._v("#")]),t._v(" Sync Adapters")]),t._v(" "),e("p",[t._v("In Alloy, a sync adapter allows you to store and load your models to a persistent storage device, such as an on-device database or remote server. Alloy relies on the Backbone API to sync model data to persistent storage.")]),t._v(" "),e("h3",{attrs:{id:"backbone-sync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#backbone-sync"}},[t._v("#")]),t._v(" Backbone Sync")]),t._v(" "),e("p",[t._v("Backbone syncs your models to persistent storage devices based on the implementation of the "),e("a",{attrs:{href:"http://docs.appcelerator.com/backbone/0.9.2/#Sync",target:"_blank",rel:"noopener noreferrer"}},[t._v("Backbone.sync method"),e("OutboundLink")],1),t._v(". Since Backbone's primary use is for web applications, by default, the Backbone.sync method executes RESTful JSON requests to a URL specified by the Model.urlRoot or Collection.url attribute, when these classes are created.")]),t._v(" "),e("p",[t._v("Models are accessed from persistent storage (or the collection) based on its "),e("code",[t._v("id")]),t._v(" attribute, which is usually the primary key assigned by the database. This behavior can be overridden by using the "),e("a",{attrs:{href:"http://docs.appcelerator.com/backbone/0.9.2/#Model-idAttribute",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("idAttribute")]),t._v(" attribute"),e("OutboundLink")],1),t._v(", which can specify a different model property to access a model. This field needs to contain unique values. The client application can also assign its own ID either when creating a model or in the implementation of the sync method rather than using the primary key returned by a server or database. Backbone also creates its own client ID (or cid) for each model, which assigns a unique identifier to models for the duration of the application. Use the "),e("a",{attrs:{href:"http://docs.appcelerator.com/backbone/0.9.2/#Model-cid",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model.cid attribute"),e("OutboundLink")],1),t._v(" and "),e("a",{attrs:{href:"http://docs.appcelerator.com/backbone/0.9.2/#Collection-getByCid",target:"_blank",rel:"noopener noreferrer"}},[t._v("Collection.getByCid"),e("OutboundLink")],1),t._v(" method if you need to access models from a collection before it is saved to persistent storage.")]),t._v(" "),e("p",[t._v("The sync method depends on calls to other Backbone methods as described in the table below.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("Backbone Method")])]),t._v(" "),e("th",[e("strong",[t._v("Sync CRUD Method")])]),t._v(" "),e("th",[e("strong",[t._v("Equivalent HTTP Method")])]),t._v(" "),e("th",[e("strong",[t._v("Equivalent SQL Method")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Collection.fetch")]),t._v(" "),e("td",[t._v("read")]),t._v(" "),e("td",[t._v("GET")]),t._v(" "),e("td",[t._v("SELECT")])]),t._v(" "),e("tr",[e("td",[t._v("Collection.create (id == null)  "),e("br"),t._v("or  "),e("br"),t._v("Collection.create (id != null)")]),t._v(" "),e("td",[t._v("create  "),e("br"),t._v("or  "),e("br"),t._v("update")]),t._v(" "),e("td",[t._v("POST  "),e("br"),t._v("or  "),e("br"),t._v("PUT")]),t._v(" "),e("td",[t._v("INSERT  "),e("br"),t._v("or  "),e("br"),t._v("UPDATE")])]),t._v(" "),e("tr",[e("td",[t._v("Model.fetch")]),t._v(" "),e("td",[t._v("read")]),t._v(" "),e("td",[t._v("GET")]),t._v(" "),e("td",[t._v("SELECT")])]),t._v(" "),e("tr",[e("td",[t._v("Model.save (id == null)  "),e("br"),t._v("or  "),e("br"),t._v("Model.save (id != null)")]),t._v(" "),e("td",[t._v("create  "),e("br"),t._v("or  "),e("br"),t._v("update")]),t._v(" "),e("td",[t._v("POST  "),e("br"),t._v("or  "),e("br"),t._v("PUT")]),t._v(" "),e("td",[t._v("INSERT  "),e("br"),t._v("or  "),e("br"),t._v("UPDATE")])]),t._v(" "),e("tr",[e("td",[t._v("Model.destroy")]),t._v(" "),e("td",[t._v("delete")]),t._v(" "),e("td",[t._v("DELETE")]),t._v(" "),e("td",[t._v("DELETE")])])])]),t._v(" "),e("p",[t._v("For example, the code below describes the default sync method behavior with the following Backbone calls:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since the urlRoot attribute is defined, all HTTP commands are to /library")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Book "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Backbone"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("extend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("urlRoot"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/library'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" book "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Performs a POST on /library with the arguments as a payload and the server returns the id as 1")]),t._v("\nbook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bossypants'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tina Fey'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("checkout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Performs a GET on /library/1")]),t._v("\nbook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Performs a PUT on /library/1 with the entire modified object as a payload.")]),t._v("\nbook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("checkout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Performs a DELETE on /library/1")]),t._v("\nbook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("In Alloy, you need to use or implement a sync adapter to access persistent storage when using Alloy Model and Collection objects.")]),t._v(" "),e("h3",{attrs:{id:"ready-made-sync-adapters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ready-made-sync-adapters"}},[t._v("#")]),t._v(" Ready-Made Sync Adapters")]),t._v(" "),e("p",[t._v("Alloy provides a few ready-made sync adapters. In the 'adapter' object, set the 'type' to use one of the following:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("sql")]),t._v(" for the SQLite database on the Android and iOS platform.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("properties")]),t._v(" for storing data locally in the Titanium SDK context.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("localStorage")]),t._v(" for HTML5 localStorage on the Mobile Web platform. Deprecated since Alloy 1.5.0. Use the "),e("code",[t._v("properties")]),t._v(" adapter instead. You do not need to define the "),e("code",[t._v("columns")]),t._v(" object in the "),e("code",[t._v("config")]),t._v(" object. If defined, the object is ignored.")])])]),t._v(" "),e("p",[t._v("These adapters are part of Alloy and are copied to the "),e("code",[t._v("Resources/alloy/sync")]),t._v(" folder during compilation. These sync adapters assign the "),e("code",[t._v("id")]),t._v(" attribute of the models, which means if you assign an ID when creating a model, it is overridden by any sync operations.")]),t._v(" "),e("h4",{attrs:{id:"sqlite-sync-adapter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sqlite-sync-adapter"}},[t._v("#")]),t._v(" SQLite Sync Adapter")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("sql")]),t._v(" sync adapter has a few extra features compared to the other sync adapters.")]),t._v(" "),e("h5",{attrs:{id:"fetch-method-accepts-sql-query"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch-method-accepts-sql-query"}},[t._v("#")]),t._v(" Fetch method accepts SQL Query")]),t._v(" "),e("p",[t._v("The Backbone.Collection.fetch method supports SQL queries as a parameter. Use "),e("code",[t._v("query")]),t._v(" as the key in the dictionary object to create a simple query or query with a prepared statement. To use a simple query, set the "),e("code",[t._v("query")]),t._v(" property to your SQL query. To use a query with a prepared statement, set "),e("code",[t._v("query.statement")]),t._v(" to your SQL statement template and set "),e("code",[t._v("query.params")]),t._v(" to the values you want to pass to the statement. For example:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" library "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Alloy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCollection")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'book'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The table name is the same as the collection_name value from the 'config.adapter' object. This may be different from the model name.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" library"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("adapter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use a simple query")]),t._v("\nlibrary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SELECT * from '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' where author=\"'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" searchAuthor "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or a prepared statement")]),t._v("\nlibrary"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" statement"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SELECT * from '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' where author = ?'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("searchAuthor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h5",{attrs:{id:"fetch-method-accepts-id-attribute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch-method-accepts-id-attribute"}},[t._v("#")]),t._v(" Fetch method accepts ID attribute")]),t._v(" "),e("p",[t._v("Since Alloy 1.3.0, to fetch a single model using its ID, pass a dictionary with one key-value pair, where "),e("code",[t._v("id")]),t._v(" is the key and the model's ID as the value to retrieve that model, to the "),e("code",[t._v("fetch")]),t._v(" method instead of using a SQL query. For example:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("myModel.fetch({id: 123});\n// is equivalent to\nmyModel.fetch({query: 'select * from ... where id = ' + 123 });\n")])])]),e("h4",{attrs:{id:"columns-accept-sqlite-keywords"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#columns-accept-sqlite-keywords"}},[t._v("#")]),t._v(" Columns accept SQLite keywords")]),t._v(" "),e("p",[t._v("The columns values accept SQLite keywords, such as AUTOINCREMENT and PRIMARY KEY. For example, the Alloy model file below defines the "),e("code",[t._v("book_id")]),t._v(" to be an auto-incremented, primary key in the "),e("code",[t._v("books")]),t._v(" table.")]),t._v(" "),e("p",[e("strong",[t._v("app/models/book.js")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("exports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("definition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    config"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"columns"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"book_id"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INTEGER PRIMARY KEY AUTOINCREMENT"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"adapter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sql"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"collection_name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"books"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"idAttribute"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"book_id"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h5",{attrs:{id:"specify-columns-property-as-primary-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specify-columns-property-as-primary-id"}},[t._v("#")]),t._v(" Specify columns property as primary ID")]),t._v(" "),e("p",[t._v("Define the "),e("code",[t._v("idAttribute")]),t._v(" key-value pair in the "),e("code",[t._v("config.adapter")]),t._v(" object to use a "),e("code",[t._v("config.columns")]),t._v(" key as the primary ID for the SQLite table, which is used as the model ID for Backbone Model and Collection objects. In the previous example, the "),e("code",[t._v("book_id")]),t._v(" column is used as the primary key for the table. If this key is not set, Alloy creates the "),e("code",[t._v("alloy_id")]),t._v(" column in the table and generates a default GUID as the model ID.")]),t._v(" "),e("h5",{attrs:{id:"specify-a-migration-to-use"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specify-a-migration-to-use"}},[t._v("#")]),t._v(" Specify a migration to use")]),t._v(" "),e("p",[t._v("Define the "),e("code",[t._v("migration")]),t._v(" key-value pair in the "),e("code",[t._v("config.adapter")]),t._v(" object to specify the database version to use. The value of this key is the datatime code of the migration file. Alloy upgrades or rolls back the database based on this value. If left undefined, Alloy upgrades the database based on the newest migration file.")]),t._v(" "),e("h5",{attrs:{id:"specify-a-database-to-use"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specify-a-database-to-use"}},[t._v("#")]),t._v(" Specify a database to use")]),t._v(" "),e("p",[t._v("Define the "),e("code",[t._v("db_name")]),t._v(" key-value pair in the "),e("code",[t._v("config.adapter")]),t._v(" object to specify the name of the database to use. If left undefined, Alloy uses the default database "),e("code",[t._v("_alloy_")]),t._v(".")]),t._v(" "),e("h5",{attrs:{id:"specify-a-database-file-to-preload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specify-a-database-file-to-preload"}},[t._v("#")]),t._v(" Specify a database file to preload")]),t._v(" "),e("p",[t._v("Define the "),e("code",[t._v("db_file")]),t._v(" key-value pair in the "),e("code",[t._v("config.adapter")]),t._v(" object to specify the database file ('myfile.sqlite') to preload. Place this file in the "),e("code",[t._v("app/assets")]),t._v(" directory of your Alloy project. Alloy creates a database using the name of the database file minus the file extension if one does not exist.")]),t._v(" "),e("h3",{attrs:{id:"custom-sync-adapters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-sync-adapters"}},[t._v("#")]),t._v(" Custom Sync Adapters")]),t._v(" "),e("p",[t._v("To create a custom sync adapter, create a JavaScript file in either "),e("code",[t._v("app/assets/alloy/sync")]),t._v(" or "),e("code",[t._v("app/lib/alloy/sync")]),t._v(". During compilation, this file is copied to the "),e("code",[t._v("Resources/alloy/sync")]),t._v(" folder. In the "),e("code",[t._v("config")]),t._v(" object of the model file, set the "),e("code",[t._v("type")]),t._v(" in the "),e("code",[t._v("adapter")]),t._v(" object to the name of the JavaScript file minus the '.js' extension.")]),t._v(" "),e("p",[t._v("The sync adapter exports three functions:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("module.exports.beforeModelCreate")]),t._v(" (optional) - executes code before creating the Backbone.Model class. First passed parameter is the "),e("code",[t._v("config")]),t._v(" object from the model file. If you add custom properties, such as server settings, to the configuration object, you can process them here. Second passed parameter is the name of the Alloy Model file. Returns a "),e("code",[t._v("config")]),t._v(" object.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("module.exports.afterModelCreate")]),t._v(" (optional) - execute code after creating the Backbone.Model class. First passed parameter is the newly created Backbone.Model class. Second passed parameter is the name of the Alloy Model file.")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("module.exports.sync")]),t._v(" - implement the "),e("a",{attrs:{href:"http://docs.appcelerator.com/backbone/0.9.2/#Sync",target:"_blank",rel:"noopener noreferrer"}},[t._v("Backbone.sync method"),e("OutboundLink")],1),t._v(".")])])]),t._v(" "),e("h4",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[t._v("For a sample of an adapter, refer to the "),e("a",{attrs:{href:"https://github.com/appcelerator-developer-relations/BookClient",target:"_blank",rel:"noopener noreferrer"}},[t._v("BookClient"),e("OutboundLink")],1),t._v(" project. The client project syncs with the "),e("a",{attrs:{href:"https://github.com/appcelerator-developer-relations/BookService",target:"_blank",rel:"noopener noreferrer"}},[t._v("BookService"),e("OutboundLink")],1),t._v(" project, which is a sample API Builder project that manages a book database with MongoHQ as a backend. The client project contains a sync adapter, located at "),e("code",[t._v("app/lib/alloy/sync/book_rest.js")]),t._v(", which uses HTTP requests to interact with the API Builder application.")]),t._v(" "),e("h2",{attrs:{id:"migrations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#migrations"}},[t._v("#")]),t._v(" Migrations")]),t._v(" "),e("p",[t._v("A migration is a description of incremental changes to a database, which takes your database from version 1 to version X, with a migration file for each step in the evolution of your database schema. This is helpful to keep different versions of a database in sync. For example, when version 7 of your application is deployed, migrations are able to successfully update the database from versions 1 through 6.")]),t._v(" "),e("p",[t._v("In Alloy, migrations are defined by JavaScript files located in the "),e("code",[t._v("app/migrations")]),t._v(" folder of the project. The file should be named the same as the model JavaScript file prefixed with 'YYYYMMDDHHmmss_' (datetime code followed by an underscore), for example, "),e("code",[t._v("20120610049877_book.js")]),t._v(". Alloy applies the migrations from oldest to newest, according to the datetime code at the beginning of the file name.")]),t._v(" "),e("p",[t._v("The migration file contains two functions that need to be implemented: "),e("code",[t._v("migration.up(migrator``)")]),t._v(" and "),e("code",[t._v("migration.down(migrator)")]),t._v(", where "),e("code",[t._v("migrator")]),t._v(" is a special migration object that provides references to the database and table as well as some convenient functions for table operations (see table below). The "),e("code",[t._v("migration.up")]),t._v(" function upgrades the database from the previous version, while the "),e("code",[t._v("migration.down")]),t._v(" function rolls back the changes to the previous version.")]),t._v(" "),e("p",[t._v("Currently, migrations are only used with the "),e("code",[t._v("sql")]),t._v(" sync adapter.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Key")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("db")])]),t._v(" "),e("td",[t._v("Handle to a "),e("code",[t._v("Ti.Database")]),t._v(" instance to interact with the SQLite database. Use this handle to execute SQL calls using "),e("code",[t._v("db.execute")]),t._v("."),e("br"),e("br"),t._v("DO NOT CLOSE THIS HANDLE OR OPEN A SECOND INSTANCE OF THE DATABASE. This will cause fatal application errors.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("dbname")])]),t._v(" "),e("td",[t._v("Name of the database.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("table")])]),t._v(" "),e("td",[t._v("Name of the table. Same as value of the "),e("code",[t._v("config.adapter.collection_name")]),t._v(" key of the Alloy Model file.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("idAttribute")])]),t._v(" "),e("td",[t._v("Name of the columns attribute to use as the primary key of the database.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("createTable")])]),t._v(" "),e("td",[t._v("Function to create a table in the database with the specified schema. Required parameter is the "),e("code",[t._v("columns")]),t._v(" object from the configuration object of the Alloy Model file.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("dropTable")])]),t._v(" "),e("td",[t._v("Function to drop the current table from the database.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("insertRow")])]),t._v(" "),e("td",[t._v("Function to insert data into the table. Required parameter is a data object to insert in the table. Useful for preloading data.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("deleteRow")])]),t._v(" "),e("td",[t._v("Function to delete data from the table. Required parameter is a data object to remove from the table. Alloy uses an SQLite query based on the specified object to find the data to delete.")])])])]),t._v(" "),e("p",[t._v("For example, the migration file below is the initial version of the database that preloads some data in the table.")]),t._v(" "),e("p",[e("strong",[t._v("app/migrations/20120610049877_book.js")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" preload_data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'To Kill a Mockingbird'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Harper Lee'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The Catcher in the Rye'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'J. D. Salinger'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Of Mice and Men'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John Steinbeck'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lord of the Flies'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'William Golding'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The Great Gatsby'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'F. Scott Fitzgerald'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Animal Farm'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'George Orwell'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmigration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("up")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("migrator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"columns"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"book"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" preload_data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("preload_data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmigration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("down")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("migrator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dropTable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Suppose later, you want to include some additional information for your books, such as an ISBN. The below migration file upgrades or rolls back the changes. Since SQLite does not support the DROP COLUMN operation, the migration needs to create a temporary table to hold the data, drop the new database, create the old database, then copy the data back to the regressed table. Note that if the Alloy Model file does not specify an "),e("code",[t._v("idAttribute")]),t._v(" property, Alloy creates the "),e("code",[t._v("alloy_id")]),t._v(" column. This column needs to be copied over as part of the migration as shown below.")]),t._v(" "),e("p",[e("strong",[t._v("app/migrations/20130118069778_book.js")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("migration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("up")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("migrator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ALTER TABLE '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' ADD COLUMN isbn INT;'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmigration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("down")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("migrator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" db "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("table"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CREATE TEMPORARY TABLE book_backup(title,author,alloy_id);'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'INSERT INTO book_backup SELECT title,author,alloy_id FROM '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dropTable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    migrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        columns"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            title"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            author"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'INSERT INTO '")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" table "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' SELECT title,author,alloy_id FROM book_backup;'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DROP TABLE book_backup;'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);