(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{2036:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"custom-fonts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#custom-fonts"}},[t._v("#")]),t._v(" Custom Fonts")]),t._v(" "),n("p",[t._v("Custom fonts are a quick and easy way to personalize or brand your application. Titanium Mobile supports TrueType and OpenType fonts on both iOS and Android. There are some differences between how fonts are referenced on iOS and Android that need to be considered.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(854),alt:"screenshot"}})]),t._v(" "),n("p",[t._v("For an example of using custom fonts, download the "),n("a",{attrs:{href:"./attachments_37685705_2_Custom_Fonts.zip"}},[t._v("Custom_Fonts")]),t._v(" application.")]),t._v(" "),n("h2",{attrs:{id:"finding-fonts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#finding-fonts"}},[t._v("#")]),t._v(" Finding fonts")]),t._v(" "),n("p",[t._v("You will need TTF or OTF font files to ship with your Titanium Mobile project. Depending on your application's license and distribution model, you might need to pay for such use, or you might be able to use an open source font. Below are links to a couple of sources of fonts:")]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"http://www.google.com/webfonts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google WebFonts"),n("OutboundLink")],1),t._v(" - Free fonts, mostly open source but some licenses for use in commercial projects")])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://www.fontsquirrel.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("FontSquirrel"),n("OutboundLink")],1),t._v(" - Freeware fonts licensed for commercial and open source projects")])])]),t._v(" "),n("h2",{attrs:{id:"using-a-custom-font-alloy-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-a-custom-font-alloy-application"}},[t._v("#")]),t._v(" Using a custom font (Alloy application)")]),t._v(" "),n("p",[t._v('To use a custom font in an Alloy project, place the font file in a "fonts" folder inside each platform-specific assets folder, as shown below:')]),t._v(" "),n("p",[n("img",{attrs:{src:a(855),alt:"image2014-1-14_11_1_2"}})]),t._v(" "),n("p",[t._v("Create a text-based UI element, such as a "),n("a",{attrs:{href:"#!/api/Titanium.UI.Label"}},[t._v("Label")]),t._v(" element, and optionally assign it an ID or class, as shown below.")]),t._v(" "),n("p",[n("strong",[t._v("View - index.xml")])]),t._v(" "),n("div",{staticClass:"language-xml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Alloy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("View")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Label")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("spicyrice"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is Spicy Rice."),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Label")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Label")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("burnstowndam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is Burnstown Dam."),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Label")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("View")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Alloy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("Create style rules for the "),n("code",[t._v("#spicyrice")]),t._v(" and "),n("code",[t._v("#burnstowndam")]),t._v(" elements that assigns the font to the rule's "),n("a",{attrs:{href:"#!/api/Font-property-fontFamily"}},[n("code",[t._v("fontFamily")])]),t._v(" property. The value you assign to "),n("code",[t._v("fontFamily")]),t._v(" depends on the platform.")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Android expects "),n("code",[t._v("fontFamily")]),t._v(" to be the font's file name without the file extension (.otf or .tff).")])]),t._v(" "),n("li",[n("p",[t._v("iOS expects "),n("code",[t._v("fontFamily")]),t._v(" to be the font's PostScript name (see "),n("a",{attrs:{href:"#finding-a-font's-postscript-name"}},[t._v("Finding a font's PostScript name")]),t._v("). This name is embedded in the font file and does not change if you rename the file.")])]),t._v(" "),n("li",[n("p",[t._v("Windows expects "),n("code",[t._v("fontFamily")]),t._v(" to be font name or [FontFilePath]#[FontName].")])])]),t._v(" "),n("p",[t._v('For example, in the following code the file name of the Burnstown Dam font is "burnstown_dam.otf". For an Android application you therefore assign the value '),n("strong",[t._v("burnstown_dam")]),t._v(" to "),n("code",[t._v("fontFamily")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\"#burnstowndam\": {\n  font: {\n      fontFamily: 'burnstown_dam'\n  }\n}\n")])])]),n("p",[t._v("The PostScript name for Burnstown Dam is "),n("strong",[t._v("BurnstownDam-Regular")]),t._v(", so for an iOS application you assign that value to "),n("code",[t._v("fontFamily")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\"#burnstowndam\": {\n  font: {\n      fontFamily: 'BurnstownDam-Regular'\n  }\n}\n")])])]),n("h3",{attrs:{id:"rename-font-file-to-match-postscript-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rename-font-file-to-match-postscript-name"}},[t._v("#")]),t._v(" Rename font file to match PostScript name")]),t._v(" "),n("p",[t._v("One way to handle cross-platform font differences easier is to rename the base name of the font file to match the font's PostScript name. You can then use that same value for "),n("code",[t._v("fontFamily")]),t._v(' for both iOS and Android. To apply this to the previous example, rename "burnstown_dam.otf" to '),n("strong",[t._v("BurnstownDam-Regular.otf")]),t._v(" (the PostScript name). Then you can use a single style rule for both platforms.")]),t._v(" "),n("p",[n("strong",[t._v("Font file renamed to match PostScript name")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("\"#burnstowndam\": {\n  font: {\n      fontFamily: 'BurnstownDam-Regular'\n  }\n}\n")])])]),n("p",[t._v("This is the approach taken in the "),n("a",{attrs:{href:"./attachments_37685705_2_Custom_Fonts.zip"}},[t._v("CustomFonts")]),t._v(" sample application.")]),t._v(" "),n("h3",{attrs:{id:"using-platform-specific-styles"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-platform-specific-styles"}},[t._v("#")]),t._v(" Using platform-specific styles")]),t._v(" "),n("p",[t._v("You can also use platform-specific styles in your TSS file (see "),n("RouterLink",{attrs:{to:"/guide/Alloy_Framework/Alloy_Guide/Alloy_Views/Alloy_Styles_and_Themes/#platform-specific-styles"}},[t._v("Alloy Styles and Themes")]),t._v(") to assign the proper "),n("code",[t._v("fontFamily")]),t._v(" name. At build time, only those settings appropriate to your target platform are included in the build.")],1),t._v(" "),n("p",[n("strong",[t._v("Platform-specific font styling")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('"#burnstowndam[platform=ios]": {\n  font: {\n    fontFamily: "BurnstownDam-Regular"\n  }\n},\n"#burnstowndam[platform=android]": {\n  font: {\n    fontFamily: "burnstown_dam"\n  }\n}\n')])])]),n("h3",{attrs:{id:"finding-a-font-s-postscript-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#finding-a-font-s-postscript-name"}},[t._v("#")]),t._v(" Finding a font's PostScript name")]),t._v(" "),n("p",[t._v("iOS applications expect the font's PostScript name, while Android expect the font's base file name. If you rename the font file's to match its PostScript name, you can use the same value on both platforms when assigning a font. On Mac, you can find a font's PostScript name using the "),n("a",{attrs:{href:"http://support.apple.com/kb/ht2509",target:"_blank",rel:"noopener noreferrer"}},[t._v("FontBook"),n("OutboundLink")],1),t._v(" application provided with OS X.")]),t._v(" "),n("p",[n("strong",[t._v("To find a font's PostScript name on OS X")]),t._v(":")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Open FontBook.")])]),t._v(" "),n("li",[n("p",[t._v("Select the desired font from the list.")])]),t._v(" "),n("li",[n("p",[t._v("Press Cmd+I to view the "),n("strong",[t._v("PostScript name")]),t._v(" for the font.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(856),alt:"postscript-name"}})])])]),t._v(" "),n("p",[t._v('A font\'s PostScript name is often the same as its "friendly name" but not always, especially with font variants (italic, bold, etc.).')]),t._v(" "),n("h2",{attrs:{id:"using-a-custom-font-classic-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-a-custom-font-classic-application"}},[t._v("#")]),t._v(" Using a custom font (Classic application)")]),t._v(" "),n("p",[t._v("Using a custom font in a classic Titanium application requires adding some runtime platform-switching code to apply the right . Once you've identified the font to use, follow these steps:")]),t._v(" "),n("p",[n("strong",[t._v("Using a custom font in a classic application")]),t._v(":")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("Copy the font file to your project's "),n("strong",[t._v("Resources/fonts/")]),t._v(" directory. To use different fonts on iOS and Android, copy the font files to "),n("code",[t._v("Resources/iphone/fonts")]),t._v(" and "),n("code",[t._v("Resources/android/fonts")]),t._v(".")])]),t._v(" "),n("li",[n("p",[t._v("The code you use varies a bit by platform, as illustrated in the following code sample:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n* Let's say you downloaded the \"Spicy Rice\" font from Google WebFonts.\n* You'd have a file named SpicyRice-Regular.ttf in your fonts directory\n*/")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" customFont "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spicy Rice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use the friendly-name on iOS")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Ti"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Platform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'android'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// on Android, use the "base name" of the file (name without extension)')]),t._v("\n   customFont "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SpicyRice-Regular'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" label1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Titanium"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLabel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   color"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am Window 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   font"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      fontSize"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      fontFamily"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" customFont\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   textAlign"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'center'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("On Android, build your project and the custom font should show up.")])])]),t._v(" "),n("h3",{attrs:{id:"ios-platform-notes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios-platform-notes"}},[t._v("#")]),t._v(" iOS platform notes")]),t._v(" "),n("p",[t._v("For iOS builds, all fonts located in the "),n("code",[t._v("Resources/fonts")]),t._v(" folder are automatically added to the application's "),n("code",[t._v("info.plist")]),t._v(" file. Custom fonts that you're using only on Android (or other platform) should not should be placed in this folder so they aren't added to the "),n("code",[t._v("info.plist")]),t._v(" of iOS builds. Those fonts should instead be placed in the platform-specific resource subfolder ("),n("code",[t._v("Resources/android/fonts")]),t._v(", for example).")]),t._v(" "),n("h3",{attrs:{id:"platform-switching-sugar"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#platform-switching-sugar"}},[t._v("#")]),t._v(" Platform-switching sugar")]),t._v(" "),n("p",[t._v("Building in those if/then statements can make for some hard to read and maintain code. So, here's a little trick pulled from Kevin Whinnery's Tweetanium app. First, include the following function in your app (maybe in your library of helper functions):")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  Branching logic based on OS\n*/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" osname "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ti"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Platform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("os")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*Object*/")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" def "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("def"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//default function or value")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("osname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" def "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("def")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" def"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("With that in place, you can now put the platform-dependent values right in line with the property assignment. Like this:")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" label1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Titanium"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLabel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  color"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am Window 1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  font"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fontSize"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fontFamily"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("os")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      iphone"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spicy Rice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ipad"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spicy Rice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      ipod"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Spicy Rice'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      android"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SpicyRice-Regular'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  textAlign"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'center'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("The "),n("code",[t._v("os()")]),t._v(" function will take the values you provide for each of the platforms, and return the correct one for the OS on which your code is running. You can use any of the values returned by "),n("code",[t._v("Ti.Platform.osname")]),t._v(" as keys for that function's single argument, as shown above.")]),t._v(" "),n("h2",{attrs:{id:"sample-application"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sample-application"}},[t._v("#")]),t._v(" Sample application")]),t._v(" "),n("p",[n("a",{attrs:{href:"./attachments_37685705_2_Custom_Fonts.zip"}},[t._v("CustomFonts")]),t._v(" demonstrates using custom fonts in an Alloy application that works on both iOS and Android.")]),t._v(" "),n("h2",{attrs:{id:"resources"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[t._v("#")]),t._v(" Resources")]),t._v(" "),n("p",[t._v("You might also want to check out the fonts built into the system before you go installing a custom font. Of course, support varies by OS version and in the case of Android, probably by handset maker and carrier. Here are some links to get you started:")]),t._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"http://jomnius.blogspot.com/2011/10/new-fonts-in-ios-50-and-some-missing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS system fonts"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://iosfonts.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOSfonts.com"),n("OutboundLink")],1)])]),t._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/android/platform_frameworks_base/tree/master/data/fonts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android fonts"),n("OutboundLink")],1),t._v(" - GitHub repo for current version of Android, older versions won't support all of these")])])])])}),[],!1,null,null,null);s.default=e.exports},854:function(t,s,a){t.exports=a.p+"assets/img/screenshot.9f719581.png"},855:function(t,s,a){t.exports=a.p+"assets/img/image2014-1-14_11_1_2.1552c885.png"},856:function(t,s,a){t.exports=a.p+"assets/img/postscript-name.525bc9ac.png"}}]);