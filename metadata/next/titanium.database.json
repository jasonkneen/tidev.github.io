{"name":"Titanium.Database","summary":"<p>The top-level <code>Database</code> module, used for creating and accessing the\nin-application SQLite database.</p>\n","extends":"Titanium.Module","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"module","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/Database/Database.yml","methods":[{"name":"install","summary":"<p>Installs an SQLite database to device's internal storage.</p>\n","description":"<p>Copies an SQLite database file to the device's internal storage (only) and\ncreates a persistent name that is available for the lifetime of the app.\nOn Android, if the source file does not exist, an empty database is created.</p>\n<p>Returns a reference to the opened database. If the destination file already\nexists, behaves as <a href=\"/api/titanium/database.html#open\">open</a>.</p>\n<p>This method is primarily used for iOS.</p>\n<p>With Android, as there is often minimal internal storage available, <code>install</code>\nmay only be appropriate for small databases or for prototyping. When database\nfiles are to be stored on external storage (for example, SD Card), a combination of\n<a href=\"/api/titanium/filesystem.html\">Titanium.Filesystem</a> and <a href=\"/api/titanium/database.html#open\">open</a> is required.</p>\n<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance\nwith Apple's guidelines. If a database file already exists in the old\nlocation, <code>install</code> will automatically move it to the new location\nrather than copying the file from the path provided in the first\nargument.</p>\n<p>Files stored in the <code>Private Documents</code> directory on iOS5 will be\nautomatically backed up to iCloud and removed from the device in low\nstorage situations. See\n<a href=\"https://developer.apple.com/library/ios/qa/qa1719/_index.html\">How do I prevent files from being backed up to iCloud and iTunes?</a>\nfor details. To prevent this for database files, use the <a href=\"/api/titanium/database/db.html#file\">file</a>\nobject with the <a href=\"/api/titanium/filesystem/file.html#remotebackup\">remoteBackup</a> property.</p>\n<p>Always <a href=\"/api/titanium/database/db.html#close\">close</a> the database after use.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"examples":"<h4 id=\"examples\"><a class=\"header-anchor\" href=\"#examples\">#</a> Examples</h4>\n<h5 id=\"install-a-database-ios\"><a class=\"header-anchor\" href=\"#install-a-database-ios\">#</a> Install a Database (iOS)</h5>\n<p>A database, with a filename of <code>mydb1</code> and located in the same directory as the\nthe running script, is installed.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> db1 <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mydb1Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The file is copied to the default database location with a file\nextension of <code>sql</code>.</p>\n<p><strong>On simulator</strong></p>\n<ul>\n<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Users/user_name/Library/Application Support/iPhone Simulator/ios_version/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n<p><strong>On device</strong></p>\n<ul>\n<li><code>/Applications/apple_app_id/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Applications/apple_app_id/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n<p>To prevent the database file being automatically backed up to iCloud, use <a href=\"/api/titanium/filesystem/file.html#remotebackup\">remoteBackup</a>.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>db1<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>remoteBackup <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h5 id=\"install-a-database-to-internal-storage-android\"><a class=\"header-anchor\" href=\"#install-a-database-to-internal-storage-android\">#</a> Install a Database to Internal Storage (Android)</h5>\n<p>A database, with a filename of <code>mydb1</code> and located in the same directory as the\nthe running script, is installed.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> db1 <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mydb1Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Unlike on iOS, no file extension is added. The file is opened in the\nfollowing default database location, on both emulator and device.</p>\n<ul>\n<li><code>file:///data/data/appID/databases/mydb1Installed</code></li>\n</ul>\n<h5 id=\"install-a-database-to-external-storage-android\"><a class=\"header-anchor\" href=\"#install-a-database-to-external-storage-android\">#</a> Install a Database to External Storage (Android)</h5>\n<p>The device is checked for the presence of external storage and a\ndatabase, with a filename of <code>mydb2</code> and located in the same directory as the\nthe running script, is installed.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Ti<span class=\"token punctuation\">.</span>Platform<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'android'</span> <span class=\"token operator\">&amp;&amp;</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">isExternalStoragePresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db2 <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb2'</span><span class=\"token punctuation\">,</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>externalStorageDirectory <span class=\"token operator\">+</span> <span class=\"token string\">'path'</span> <span class=\"token operator\">+</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">'to'</span> <span class=\"token operator\">+</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">'mydb2Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Unlike on iOS, no file extension is added. The file is copied to the\nabsolute path provided.</p>\n<ul>\n<li><code>file:///sdcard/path/to/mydb2Installed</code></li>\n</ul>\n","parameters":[{"name":"path","summary":"<p>Path and filename of the database file to copy to internal storage.\nFile location is relative to the script's context unless an absolute\npath, such as one constructed with a <a href=\"/api/titanium/filesystem.html\">Titanium.Filesystem</a>\nconstant, is used.</p>\n","type":"String"},{"name":"dbName","summary":"<p>Destination filename or absolute path, which will subsequently be passed to\n<a href=\"/api/titanium/database.html#open\">open</a>.</p>\n","type":"String"}],"returns":{"type":"Titanium.Database.DB"}},{"name":"open","summary":"<p>Opens an SQLite database.</p>\n","description":"<p>Opens an SQLite database and returns a reference to it. If the database does\nnot exist, creates an empty database file and returns a reference to this\nopened database.</p>\n<p>With Titanium 1.8.0.1 on iOS, the default database location changed in accordance\nwith Apple's guidelines. If a database file already exists in the old\nlocation, <code>open</code> will automatically move it to the new location.</p>\n<p>Always <a href=\"/api/titanium/database/db.html#close\">close</a> the database after use.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"examples":"<h4 id=\"examples\"><a class=\"header-anchor\" href=\"#examples\">#</a> Examples</h4>\n<h5 id=\"open-a-database-from-internal-storage-ios\"><a class=\"header-anchor\" href=\"#open-a-database-from-internal-storage-ios\">#</a> Open a Database from Internal Storage (iOS)</h5>\n<p>A database, with a persistant name of <code>mydb1Installed</code> and located in the\ndefault database location on internal storage, is opened.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb1Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>A file extension of <code>sql</code> is added, and the file is opened from the\nfollowing location.</p>\n<p>On simulator</p>\n<ul>\n<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Users/&lt;user name&gt;/Library/Application Support/iPhone Simulator/&lt;iOS version&gt;/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n<p>On device</p>\n<ul>\n<li><code>/Applications/&lt;apple app id&gt;/Library/Private Documents/mydb1Installed.sql</code> (Titanium 1.8.0.1)</li>\n<li><code>/Applications/&lt;apple app id&gt;/Library/Application Support/database/mydb1Installed.sql</code> (earlier versions)</li>\n</ul>\n<h5 id=\"open-a-database-on-internal-storage-android\"><a class=\"header-anchor\" href=\"#open-a-database-on-internal-storage-android\">#</a> Open a Database on Internal Storage (Android)</h5>\n<p>A database, with a persistant name of <code>mydb1Installed</code> and located in the\ndefault database location on internal storage, is opened.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> db1 <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb1Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Unlike on iOS, no file extension is added. The file is opened in\nthe following location.</p>\n<ul>\n<li><code>file:///data/data/appID/databases/mydb1Installed</code></li>\n</ul>\n<h5 id=\"open-a-database-on-external-storage-android\"><a class=\"header-anchor\" href=\"#open-a-database-on-external-storage-android\">#</a> Open a Database on External Storage (Android)</h5>\n<p>A database, with a filename of <code>mydb2Installed</code> and located at the\nabsolute path provided, is opened.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Ti<span class=\"token punctuation\">.</span>Platform<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'android'</span> <span class=\"token operator\">&amp;&amp;</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">isExternalStoragePresent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> db2 <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>externalStorageDirectory <span class=\"token operator\">+</span> <span class=\"token string\">'path'</span> <span class=\"token operator\">+</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">'to'</span> <span class=\"token operator\">+</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span>separator <span class=\"token operator\">+</span> <span class=\"token string\">'mydb2Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Unlike on iOS, no file extension is added. The file is copied to the\nabsolute path, as follows.</p>\n<ul>\n<li><code>file:///sdcard/path/to/mydb2Installed</code></li>\n</ul>\n<h5 id=\"open-a-database-in-the-shared-directory-of-an-application-group-ios\"><a class=\"header-anchor\" href=\"#open-a-database-in-the-shared-directory-of-an-application-group-ios\">#</a> Open a Database in the shared directory of an application group (iOS)</h5>\n<p>Opens a Database in a shared directory</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> suiteDir <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">directoryForSuite</span><span class=\"token punctuation\">(</span><span class=\"token string\">'group.appc.Sharing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>suiteDir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">logInApp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Suite Directory not found, check Entitlements.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> suiteDir <span class=\"token operator\">+</span> <span class=\"token string\">'TestDB'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend-->","parameters":[{"name":"dbName","summary":"<p>The dbname previously passed to <a href=\"/api/titanium/database.html#install\">install</a>. An absolute path\nto the file, including one that is constructed with a <a href=\"/api/titanium/filesystem.html\">Titanium.Filesystem</a>\nconstant or <a href=\"/api/titanium/filesystem.html#directoryforsuite\">directoryForSuite</a> method, may be used.</p>\n","type":"String"}],"returns":{"type":"Titanium.Database.DB"}}],"properties":[],"events":[],"constants":[{"name":"FIELD_TYPE_DOUBLE","summary":"<p>Constant for requesting a column's value returned in double form.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"},{"name":"FIELD_TYPE_FLOAT","summary":"<p>Constant for requesting a column's value returned in float form.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"},{"name":"FIELD_TYPE_INT","summary":"<p>Constant for requesting a column's value returned in integer form.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"},{"name":"FIELD_TYPE_STRING","summary":"<p>Constant for requesting a column's value returned in string form.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"}]}
