{"name":"buffer","summary":"<p>A Node.js-compatible implementation of the core <code>buffer</code> module</p>\n","extends":"Object","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"pseudo","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/NodeJS/buffer.yml","methods":[{"name":"alloc","summary":"<p>Allocates a new <code>Buffer</code> of <code>size</code> bytes. If <code>fill</code> is <code>undefined</code>, the <code>Buffer</code> will be zero-filled.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"size","summary":"<p>The desired length of the new <code>Buffer</code>.</p>\n","type":"Number"},{"name":"fill","summary":"<p>A value to pre-fill the new <code>Buffer</code> with.</p>\n","type":["String","Number","buffer.Buffer","Uint8Array"],"optional":true},{"name":"encoding","summary":"<p>If <code>fill</code> is a string, this is its encoding.</p>\n","type":"String","optional":true}],"returns":{"type":"buffer.Buffer"}},{"name":"allocUnsafe","summary":"<p>Allocates a new <code>Buffer</code> of <code>size</code> bytes.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"size","summary":"<p>The desired length of the new <code>Buffer</code>.</p>\n","type":"Number"}],"returns":{"type":"buffer.Buffer"}},{"name":"allocUnsafeSlow","summary":"<p>Allocates a new <code>Buffer</code> of <code>size</code> bytes.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"size","summary":"<p>The desired length of the new <code>Buffer</code>.</p>\n","type":"Number"}],"returns":{"type":"buffer.Buffer"}},{"name":"byteLength","summary":"<p>Returns the byte length of a string when encoded using <code>encoding</code>. This is not the same as <code>String.prototype.length</code>, which does not account for the encoding that is used to convert the string into bytes.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"string","summary":"<p>A value to calculate the length of.</p>\n","type":["String","buffer.Buffer","ArrayBuffer"]},{"name":"encoding","summary":"<p>If <code>string</code> is a string, this is its encoding.</p>\n","type":"String","optional":true}],"returns":{"type":"Number"}},{"name":"compare","summary":"<p>Compares <code>buf1</code> to <code>buf2</code>, typically for the purpose of sorting arrays of <a href=\"/api/structs/buffer/buffer.html\">buffer.Buffer</a> instances. This is equivalent to calling <code>buf1.compare(buf2)</code>.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"buf1","summary":"<p>A value to calculate the length of.</p>\n","type":["buffer.Buffer","Uint8Array"]},{"name":"buf2","summary":"<p>If <code>string</code> is a string, this is its encoding.</p>\n","type":["buffer.Buffer","Uint8Array"]}],"returns":{"summary":"<p>Either <code>-1</code>, <code>0</code>, or <code>1</code>, depending on the result of the comparison. See <a href=\"/api/structs/buffer/buffer.html#compare\">compare</a> for details.</p>\n","type":"Number"}},{"name":"concat","summary":"<p>Returns a new <a href=\"/api/structs/buffer/buffer.html\">buffer.Buffer</a> which is the result of concatenating all the <a href=\"/api/structs/buffer/buffer.html\">buffer.Buffer</a> instances in the list together.</p>\n<p>If the list has no items, or if the <code>totalLength</code> is <code>0</code>, then a new zero-length Buffer is returned.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"list","summary":"<p>List of <code>Buffer</code> or <code>Uint8Array</code> instances to concatenate.</p>\n","type":["Array<buffer.Buffer>","Array<Uint8Array>"]},{"name":"totalLength","summary":"<p>Total length of the Buffer instances in list when concatenated.</p>\n","type":"Number","optional":true}],"returns":{"summary":"<p>Either <code>-1</code>, <code>0</code>, or <code>1</code>, depending on the result of the comparison. See <a href=\"/api/structs/buffer/buffer.html#compare\">compare</a> for details.</p>\n","type":"buffer.Buffer"}},{"name":"from","summary":"<p>Allocates a new <code>Buffer</code> using an <code>array</code> of bytes in the range <code>0 â€“ 255</code>. Array entries outside that range will be truncated to fit into it.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"arg","summary":"<p>The array of bytes to wrap in a <code>Buffer</code>, <code>Buffer</code> to copy, String to decode into bytes, or <a href=\"/api/titanium/buffer.html\">Titanium.Buffer</a> to wrap.</p>\n","type":["Array<Number>","buffer.Buffer","String","Titanium.Buffer","Uint8Array"]},{"name":"encodingOrOffset","summary":"<p>encoding of the string, or start offset of array/buffer</p>\n","type":["String","Number"],"optional":true},{"name":"length","summary":"<p>length of the underlying array/buffer to wrap</p>\n","type":"Number","optional":true}],"returns":{"type":"buffer.Buffer"}},{"name":"isBuffer","summary":"<p>Returns <code>true</code> if <code>obj</code> is a <code>Buffer</code>, <code>false</code> otherwise.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"obj","summary":"<p>The object to check if it is a <code>Buffer</code></p>\n","type":"Object"}],"returns":{"type":"Boolean"}},{"name":"isEncoding","summary":"<p>Returns <code>true</code> if <code>encoding</code> is the name of a supported character encoding, or <code>false</code> otherwise.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"encoding","summary":"<p>A character encoding name to check.</p>\n","type":"String"}],"returns":{"type":"Boolean"}}],"properties":[{"name":"kMaxLength","summary":"<p>The largest size allowed for a single <a href=\"/api/structs/buffer/buffer.html\">buffer.Buffer</a> instance.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number"},{"name":"poolSize","summary":"<p>This is the size (in bytes) of pre-allocated internal <code>Buffer</code> instances used for pooling. This value may be modified.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","default":8192}],"events":[],"constants":[{"name":"INSPECT_MAX_BYTES","summary":"<p>The maximum number of bytes that will be returned when <code>buf.inspect()</code> is called. This can be overridden by user modules.</p>\n","platforms":[{"since":"8.2.0","name":"android"},{"since":"8.2.0","name":"iphone"},{"since":"8.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","default":50}]}
