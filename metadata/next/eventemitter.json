{"name":"EventEmitter","summary":"<p>The EventEmitter class is defined and exposed by the events module:</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> EventEmitter <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'events'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>All EventEmitters emit the event 'newListener' when new listeners are added and 'removeListener' when existing listeners are removed.</p>\n","extends":"Object","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"pseudo","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/NodeJS/events.yml","events":[{"name":"newListener","summary":"<p>The <code>'newListener'</code> event is emitted after the listener is added.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event handler function</p>\n","type":"Function"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"removeListener","summary":"<p>The <code>'removeListener'</code> event is emitted after the listener is removed.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event handler function</p>\n","type":"Function"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]}],"methods":[{"name":"addListener","summary":"<p>Alias for <a href=\"/api/structs/eventemitter.html#on\">on</a></p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"emit","summary":"<p>Synchronously calls each of the listeners registered for the event named eventName, in the order they were registered, passing the supplied arguments to each.</p>\n<p>Returns <code>true</code> if the event had listeners, <code>false</code> otherwise.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"args","summary":"<p>Optional arguments to pass along to event listeners</p>\n","type":"any","optional":true,"repeatable":true}],"returns":{"type":"Boolean"}},{"name":"eventNames","summary":"<p>Returns an array listing the events for which the emitter has registered listeners.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"Array<String>"}},{"name":"getMaxListeners","summary":"<p>Returns the current max listener value for the <code>EventEmitter</code> which is either set by <a href=\"/api/structs/eventemitter.html#setmaxlisteners\">setMaxListeners</a> or defaults to <a href=\"/api/structs/events.html#defaultmaxlisteners\">defaultMaxListeners</a>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"Number"}},{"name":"listenerCount","summary":"<p>Returns the number of listeners listening to the event named <code>eventName</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"}],"returns":{"type":"Number"}},{"name":"listeners","summary":"<p>Returns a copy of the array of listeners for the event named <code>eventName</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"}],"returns":{"type":"Array<Function>"}},{"name":"off","summary":"<p>Alias for <a href=\"/api/structs/eventemitter.html#removelistener\">removeListener</a>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"on","summary":"<p>Adds the listener function to the end of the listeners array for the event named eventName.</p>\n","description":"<p>No checks are made to see if the listener has already been added.</p>\n<p>Multiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"once","summary":"<p>Adds a <strong>one-time</strong> listener function for the event named <code>eventName</code>. The next time <code>eventName</code> is triggered, this listener is removed and then invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"prependListener","summary":"<p>Adds the listener function to the <em>beginning</em> of the listeners array for the event named <code>eventName</code>.</p>\n","description":"<p>No checks are made to see if the listener has already been added.\nMultiple calls passing the same combination of eventName and listener will result in the listener being added, and called, multiple times.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"prependOnceListener","summary":"<p>Adds a <strong>one-time</strong> listener function for the event named <code>eventName</code> to the <em>beginning</em> of the listeners array. The next time <code>eventName</code> is triggered, this listener is removed, and then invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"rawListeners","summary":"<p>Returns a copy of the array of listeners for the event named <code>eventName</code>, including any wrappers (such as those created by <code>.once()</code>).</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"}],"returns":{"type":"Array<Function>"}},{"name":"removeAllListeners","summary":"<p>Removes all listeners, or those of the specified <code>eventName</code>.</p>\n","description":"<p>It is bad practice to remove listeners added elsewhere in the code, particularly when the <code>EventEmitter</code> instance was created by some other component or module (e.g. sockets or file streams).</p>\n<p>Returns a reference to the <code>EventEmitter</code>, so that calls can be chained.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String","optional":true}],"returns":{"type":"EventEmitter"}},{"name":"removeListener","summary":"<p>Removes the specified listener from the listener array for the event named <code>eventName</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"eventName","summary":"<p>The event name</p>\n","type":"String"},{"name":"listener","summary":"<p>The event listener/callback function</p>\n","type":"Function"}],"returns":{"type":"EventEmitter"}},{"name":"setMaxListeners","summary":"<p>By default <code>EventEmitter</code>s will print a warning if more than <code>10</code> listeners are added for a particular event.\nThis is a useful default that helps finding memory leaks.\nThe <code>emitter.setMaxListeners()</code> method allows the limit to be modified for this specific <code>EventEmitter</code> instance.\nThe value can be set to <code>Infinity</code> (or <code>0</code>) to indicate an unlimited number of listeners.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"n","summary":"<p>new max listener count</p>\n","type":"Number"}],"returns":{"type":"EventEmitter"}}],"properties":[],"constants":[]}
