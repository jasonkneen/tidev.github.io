{"name":"Titanium.Database.DB","summary":"<p>The <code>Database</code> instance returned by <a href=\"/api/titanium/database.html#open\">open</a> or <a href=\"/api/titanium/database.html#install\">install</a>.</p>\n","extends":"Titanium.Proxy","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"object","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/Database/DB.yml","methods":[{"name":"close","summary":"<p>Closes the database and releases resources from memory. Once closed, this instance is no\nlonger valid and should not be used. On iOS, also closes all <a href=\"/api/titanium/database/resultset.html\">Titanium.Database.ResultSet</a>\ninstances that exist.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}},{"name":"execute","summary":"<p>Executes an SQL statement against the database and returns a <code>ResultSet</code>.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"examples":"<h4 id=\"examples\"><a class=\"header-anchor\" href=\"#examples\">#</a> Examples</h4>\n<h5 id=\"executing-a-query\"><a class=\"header-anchor\" href=\"#executing-a-query\">#</a> Executing a Query</h5>\n<p>The following code will install a database using\n<a href=\"/api/titanium/database.html#install\">install</a> and execute SQL statements that will\ncreate a table, insert data and query the table.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mydb1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mydb1Installed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DELETE FROM people'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'CREATE TABLE IF NOT EXISTS people (name TEXT, phone_number TEXT, city TEXT)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> thisName <span class=\"token operator\">=</span> <span class=\"token string\">'Arthur'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> thisPhoneNo <span class=\"token operator\">=</span> <span class=\"token string\">'1-617-000-0000'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> thisCity <span class=\"token operator\">=</span> <span class=\"token string\">'Mountain View'</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)'</span><span class=\"token punctuation\">,</span> thisName<span class=\"token punctuation\">,</span> thisPhoneNo<span class=\"token punctuation\">,</span> thisCity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> personArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Paul'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'020 7000 0000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'London'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INSERT INTO people (name, phone_number, city) VALUES (?, ?, ?)'</span><span class=\"token punctuation\">,</span> personArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> rows <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SELECT rowid,name,phone_number,city FROM people'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">.</span><span class=\"token function\">isValidRow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Person ---> ROWID: '</span> <span class=\"token operator\">+</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">fieldByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rowid'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', name:'</span> <span class=\"token operator\">+</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', phone_number: '</span> <span class=\"token operator\">+</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">fieldByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">', city: '</span> <span class=\"token operator\">+</span> rows<span class=\"token punctuation\">.</span><span class=\"token function\">field</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  rows<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nrows<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>Note that the above <code>SELECT</code> query contains the <a href=\"http://www.sqlite.org/lang_createtable.html#rowid\">rowid</a>\ncolumn, which is a SQLite-specific column that stores the unique identifier for each row.</p>\n","parameters":[{"name":"sql","summary":"<p>SQL to execute. May include placeholders for parameter substitution.</p>\n","type":"String"},{"name":"vararg","summary":"<p>Either a variable ordered list of zero or more values, or an array of values,\nto be substituted with the respective <code>?</code> placeholder of the query.</p>\n","type":["String","Array<String>","Object","Array<Object>"],"optional":true,"repeatable":true}],"returns":{"type":"Titanium.Database.ResultSet"}},{"name":"executeAll","summary":"<p>Synchronously executes an array of SQL statements against the database and returns an array of <code>ResultSet</code>.\nOn failure, this will throw an <a href=\"/api/structs/batchqueryerror.html\">BatchQueryError</a> that reports the failed index and partial results</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"queries","summary":"<p>Array of SQL queries to execute.</p>\n","type":"Array<String>"}],"returns":{"type":"Array<Titanium.Database.ResultSet>"}},{"name":"executeAllAsync","summary":"<p>Asynchronously executes an array of SQL statements against the database and fires a callback with a possible Error, and an array of <code>ResultSet</code>.\nOn failure, this will call the callback with an <a href=\"/api/structs/possiblebatchqueryerror.html\">PossibleBatchQueryError</a> that reports the failed <code>index</code>, and a second argument with the partial <code>results</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"queries","summary":"<p>Array of SQL queries to execute.</p>\n","type":"Array<String>"},{"name":"callback","summary":"<p>Callback when query execution has completed.</p>\n","type":"Callback<PossibleBatchQueryError, Array<Titanium.Database.ResultSet>>","optional":true}],"returns":{"summary":"<p>On SDK 10+, this method will return a <code>Promise</code> whose resolved value is equivalent to that passed to the optional callback argument.\nIf the <code>Promise</code> is rejected, the <code>Error</code> will have custom properties indicating the <code>index</code> of the failed query, and the partial <code>results</code> up to that failure. See <a href=\"/api/structs/possiblebatchqueryerror.html\">PossibleBatchQueryError</a>.</p>\n","type":"Promise<Array<Titanium.Database.ResultSet>>"}},{"name":"executeAsync","summary":"<p>Asynchronously executes an SQL statement against the database and fires a callback with a possible <code>Error</code> argument, and a second argument holding a possible <code>ResultSet</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"query","summary":"<p>SQL query to execute. May include placeholders for parameter substitution.</p>\n","type":"String"},{"name":"vararg","summary":"<p>Either a variable ordered list of zero or more values, or an array of values,\nto be substituted with the respective <code>?</code> placeholder of the query.</p>\n","type":["String","Array<String>","Object","Array<Object>"],"optional":true},{"name":"callback","summary":"<p>Callback when query execution has completed.</p>\n","type":"Callback<Object, Titanium.Database.ResultSet>","optional":true}],"returns":{"summary":"<p>On SDK 10+, this method will return a <code>Promise</code> whose resolved value is equivalent to that passed to the optional callback argument.</p>\n","type":"Promise<Titanium.Database.ResultSet>"}},{"name":"remove","summary":"<p>Removes the database files for this instance from disk. WARNING: this is a destructive\noperation and cannot be reversed. All data in the database will be lost; use with caution.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}}],"properties":[{"name":"file","summary":"<p>A <code>File</code> object representing the file where this database is stored. Must only be used for\nsetting file properties.</p>\n","platforms":[{"since":"5.4.0","name":"android"},{"since":"2.0.0","name":"iphone"},{"since":"2.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Titanium.Filesystem.File","permission":"read-only"},{"name":"lastInsertRowId","summary":"<p>The identifier of the last populated row.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"},{"name":"name","summary":"<p>The name of the database.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"String","permission":"read-only"},{"name":"rowsAffected","summary":"<p>The number of rows affected by the last query.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Number","permission":"read-only"}],"subtype":"proxy","events":[],"constants":[]}
