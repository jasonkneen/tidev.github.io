{"name":"Titanium.UI.WebView","summary":"<p>The web view allows you to open an HTML5 based view which can load either local or remote content.</p>\n","extends":"Titanium.UI.View","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"object","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/Titanium/UI/WebView.yml","events":[{"name":"beforeload","summary":"<p>Fired before the web view starts loading its content.</p>\n","description":"<p>This event may fire multiple times depending on the content or URL.  For example, if you set\nthe URL of the web view to a URL that redirects to another URL, such as an HTTP URL\nredirecting to an HTTPS URL, this event is fired for the original URL and the redirect URL.</p>\n<p>This event does not fire when navigating remote web pages.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"url","summary":"<p>URL of the web document being loaded.</p>\n","type":"String"},{"name":"navigationType","summary":"<p>Constant indicating the user's action.</p>\n","type":"Number"},{"name":"isMainFrame","summary":"<p>Indicate if the event was generated from the main page or an iframe.</p>\n","type":"Boolean"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"error","summary":"<p>Fired when the web view cannot load the content.</p>\n","description":"<p>The <code>errorCode</code> value refers to one of the <a href=\"/api/titanium/ui.html\">Titanium.UI</a> URL_ERROR constants or, if it does not\nmatch one of those constants, it refers to a platform-specific constant. The platform-specific\nvalues are underlying <a href=\"https://developer.apple.com/documentation/foundation/1508628-url_loading_system_error_codes\">iOS NSURLError*</a>\nor <a href=\"https://developer.android.com/reference/android/webkit/WebViewClient.html\">Android WebViewClient ERROR_*</a> constants.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"success","summary":"<p>Indicates a successful operation. Returns <code>false</code>.</p>\n","type":"Boolean"},{"name":"error","summary":"<p>Error message, if any returned. May be undefined.</p>\n","type":"String"},{"name":"code","summary":"<p>Error code.\nIf the error was generated by the operating system, that system's error value\nis used. Otherwise, this value will be -1.</p>\n","type":"Number"},{"name":"url","summary":"<p>URL of the web document.</p>\n","type":"String"},{"name":"message","deprecated":{"notes":"Use the `error` property instead. Removed on ios in 8.0.0. Removed on android in 9.0.0.","since":"3.1.0","removed":"9.0.0"},"summary":"<p>Error message. Use error instead.</p>\n","type":"String"},{"name":"errorCode","deprecated":{"notes":"Use the `code` property instead. Removed on ios in 8.0.0. Removed on android in 9.0.0.","since":"3.1.0","removed":"9.0.0"},"summary":"<p>A constant or underlying platform specific error code. Use code instead.</p>\n","type":"Number"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"load","summary":"<p>Fired when the web view content is loaded.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"url","summary":"<p>URL of the web document.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"onLoadResource","summary":"<p>Fired when loading resource.</p>\n","description":"<p>Android only. Notify the host application that the WebView will load the resource specified by the given url.</p>\n","platforms":[{"since":"3.6.0","name":"android"}],"properties":[{"name":"url","summary":"<p>The url of the resource that will load.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"sslerror","summary":"<p>Fired when an SSL error occurred.</p>\n","description":"<p>This is a synchronous event and the developer can change the value of <code>ignoreSslError</code>\nto control if the request should proceed or fail.</p>\n","platforms":[{"since":"3.3.0","name":"android"},{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"code","summary":"<p>SSL error code.</p>\n","type":"Number"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"onStopBlacklistedUrl","deprecated":{"notes":"<p>Use the  cross-platform <code>blacklisturl</code> event instead.</p>\n","since":"6.1.0","removed":"9.0.0"},"summary":"<p>Fired when a blacklisted URL is stopped.</p>\n","platforms":[{"since":"5.4.0","name":"android"}],"properties":[{"name":"url","summary":"<p>The URL of the web document that is stopped.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"blacklisturl","deprecated":{"notes":"<p>Use the <code>blockedurl</code> event instead.</p>\n","since":"9.2.0"},"summary":"<p>Fired when a blacklisted URL is stopped.</p>\n","platforms":[{"since":"6.1.0","name":"android"},{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"url","summary":"<p>The URL of the web document that is stopped.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"blockedurl","summary":"<p>Fired when a URL has been blocked from loading.</p>\n","description":"<p>This event is fired when the end-user attempts to navigate to a website matching a URL in\nthe <a href=\"/api/titanium/ui/webview.html#blockedurls\">blockedURLs</a> property.</p>\n","platforms":[{"since":"9.2.0","name":"android"},{"since":"9.2.0","name":"iphone"},{"since":"9.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"url","summary":"<p>The URL of the web document that has been blocked from loading.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"message","summary":"<p>Fired when a script message is received from a webpage.</p>\n","description":"<p>This event get fired when you have added a message handler using <a href=\"/api/titanium/ui/webview.html#addscriptmessagehandler\">addScriptMessageHandler</a>\nand the webpage sends a message to it.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"url","summary":"<p>URL of the web document being loaded.</p>\n","type":"String"},{"name":"body","summary":"<p>The body of the message sent from webview.</p>\n","type":"String"},{"name":"name","summary":"<p>The name of the message handler to which the message is sent.</p>\n","type":"String"},{"name":"isMainFrame","summary":"<p>A Boolean value indicating whether the frame is the web site's main frame or a subframe.</p>\n","type":"Boolean"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"progress","summary":"<p>Fired when webpage download progresses.</p>\n","description":"<p>Provides a normalized value between 0.0 and 1.0, where 0.0 indicates nothing was downloaded and\n1.0 means the page and all of its resources has finished downloading.</p>\n","platforms":[{"since":"9.1.0","name":"android"},{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"value","summary":"<p>An estimate of what fraction of the current navigation has been loaded.</p>\n","type":"Number"},{"name":"url","summary":"<p>URL of the web document being loaded.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"redirect","summary":"<p>Fired when a web view receives a server redirect.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"title","summary":"<p>Page title of webpage.</p>\n","type":"String"},{"name":"url","summary":"<p>URL of the web document being loaded.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"handleurl","summary":"<p>Fired when <a href=\"/api/titanium/ui/webview.html#allowedurlschemes\">allowedURLSchemes</a> contains scheme of opening url.</p>\n","description":"<p>See the example section &quot;Usage of allowedURLSchemes and handleurl in iOS&quot;.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"handler","summary":"<p>Handler <a href=\"/api/titanium/ui/ios/webviewdecisionhandler.html\">Titanium.UI.iOS.WebViewDecisionHandler</a>.</p>\n","type":"String"},{"name":"url","summary":"<p>URL of the web document being loaded.</p>\n","type":"String"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]}],"methods":[{"name":"addScriptMessageHandler","summary":"<p>Adds a script message handler.</p>\n","description":"<p>Adding a script message handler with name 'name' causes the JavaScript function\nwindow.webkit.messageHandlers.name.postMessage(messageBody) to be defined in all\nframes in the web view.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"handlerName","summary":"<p>The name of the message handler and should not be '<em>Ti</em>',\nas titanium is using it for internal usage.</p>\n","type":"String"}],"returns":{"type":"void"}},{"name":"addUserScript","summary":"<p>Adds a user script.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"params","summary":"<p>Properties required to create user script.</p>\n","type":"UserScriptParams"}],"returns":{"type":"void"}},{"name":"backForwardList","summary":"<p>An object which maintains a list of visited pages used to go back and forward to the most recent page.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"BackForwardList"}},{"name":"canGoBack","summary":"<p>Returns <code>true</code> if the web view can go back in its history list.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"Boolean"}},{"name":"canGoForward","summary":"<p>Returns <code>true</code> if the web view can go forward in its history list.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"Boolean"}},{"name":"createPDF","summary":"<p>Create a PDF document representation from the web page currently displayed in the WebView.</p>\n","description":"<p>If the data is written to a file the resulting file is a valid PDF document.</p>\n","platforms":[{"since":"9.2.0","name":"iphone"},{"since":"9.2.0","name":"ipad"}],"parameters":[{"name":"callback","summary":"<p>Function to call upon pdf creation.</p>\n","type":"Callback<DataCreationResult>"}],"returns":{"type":"void"}},{"name":"createWebArchive","summary":"<p>Create WebKit web archive data representing the current web content of the WebView.</p>\n","description":"<p>WebKit web archive data represents a snapshot of web content. It can be loaded into a WebView directly,\nand saved to a file for later use.</p>\n","platforms":[{"since":"9.2.0","name":"iphone"},{"since":"9.2.0","name":"ipad"}],"parameters":[{"name":"callback","summary":"<p>Function to call upon web archive creation.</p>\n","type":"Callback<DataCreationResult>"}],"returns":{"type":"void"}},{"name":"evalJS","summary":"<p>Evaluates a JavaScript expression inside the context of the web view and\noptionally, returns a result. If a callback function is passed in as second argument,\nthe evaluation will take place asynchronously and the the callback function will be called with the result.</p>\n","description":"<p>The JavaScript expression must be passed in as a string. If you are passing in any objects,\nyou must serialize them to strings using <a href=\"/api/global.html\">Global</a>.</p>\n<p>The <code>evalJS</code> method returns a string representing the value of the expression. For\nexample, the following call retrieves the <code>document.title</code> element from the\ndocument currently loaded into the web view.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> docTitle <span class=\"token operator\">=</span> myWebView<span class=\"token punctuation\">.</span><span class=\"token function\">evalJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'document.title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>It is not necessary to include <code>return</code> in the JavaScript. In fact, the following\ncall returns the empty string:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>myWebView<span class=\"token punctuation\">.</span><span class=\"token function\">evalJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'return document.title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>The <code>evalJS</code> variant with a second callback argument executes asynchronously.</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code>myWebView<span class=\"token punctuation\">.</span><span class=\"token function\">evalJS</span><span class=\"token punctuation\">(</span><span class=\"token string\">'document.title'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Manipulate the result here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend-->","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"parameters":[{"name":"code","summary":"<p>JavaScript code as a string. The code will be evaluated inside the web view context.</p>\n","type":"String"},{"name":"callback","summary":"<p>Optional callback function for the result. Required on Windows, optional on iOS/Android.</p>\n","type":"Callback<String>","optional":true}],"returns":{"summary":"<p>Result of the evaluation. May be null if the asynchronous variant of this method is called.</p>\n","type":"String"}},{"name":"findString","summary":"<p>Searches the page contents for the given string.</p>\n","platforms":[{"since":"9.2.0","name":"iphone"},{"since":"9.2.0","name":"ipad"}],"parameters":[{"name":"searchString","summary":"<p>The string to search for.</p>\n","type":"String"},{"name":"options","summary":"<p>Options for search.</p>\n","type":"StringSearchOptions","optional":true},{"name":"callback","summary":"<p>Function to call upon search finished.</p>\n","type":"Callback<SearchResult>"}],"returns":{"type":"void"}},{"name":"goBack","summary":"<p>Goes back one entry in the web view's history list, to the previous page.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}},{"name":"goForward","summary":"<p>Goes forward one entry in this web view's history list, if possible.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}},{"name":"pause","summary":"<p>Pauses native webview plugins.</p>\n","description":"<p>Add a <code>pause</code> handler to your <a href=\"/api/titanium/android/activity.html\">Titanium.Android.Activity</a> and invoke\nthis method to pause native plugins.</p>\n<p>Call <a href=\"/api/titanium/ui/webview.html#resume\">resume</a> to unpause native plugins.</p>\n","platforms":[{"since":"1.8.0","name":"android"}],"returns":{"type":"void"}},{"name":"release","summary":"<p>Releases memory when the web view is no longer needed.</p>\n","platforms":[{"since":"2.0.0","name":"android"}],"returns":{"type":"void"}},{"name":"reload","summary":"<p>Reloads the current webpage.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}},{"name":"removeAllUserScripts","summary":"<p>Removes all associated user scripts.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"removeScriptMessageHandler","summary":"<p>Removes a script message handler.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"name","summary":"<p>The name of the message handler.</p>\n","type":"String"}],"returns":{"type":"void"}},{"name":"repaint","summary":"<p>Forces the web view to repaint its contents.</p>\n","platforms":[{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"resume","summary":"<p>Resume native webview plugins.</p>\n","description":"<p>Used to unpause native plugins after calling <a href=\"/api/titanium/ui/webview.html#pause\">pause</a>.</p>\n<p>Add a <code>resume</code> handler to your <a href=\"/api/titanium/android/activity.html\">Titanium.Android.Activity</a> and invoke\nthis method to resume native plugins.</p>\n","platforms":[{"since":"1.8.0","name":"android"}],"returns":{"type":"void"}},{"name":"setBasicAuthentication","summary":"<p>Sets the basic authentication for this web view to use on subsequent URL requests.</p>\n","description":"<p>The persistence property of this method is only supported on iOS and Titanium SDK 8.0.0+.\nIt is ignored on other platforms and versions.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"username","summary":"<p>Basic auth user name.</p>\n","type":"String"},{"name":"password","summary":"<p>Basic auth password.</p>\n","type":"String"},{"name":"persistence","summary":"<p>Constants specify how long the credential will be kept.\nThis is only supported on iOS and Titanium SDK 8.0.0+.</p>\n","type":"Number"}],"returns":{"type":"void"}},{"name":"setHtml","summary":"<p>Sets the value of <a href=\"/api/titanium/ui/webview.html#html\">html</a> property.</p>\n","description":"<p>The <code>options</code> parameter can be used to specify two options that affect\nthe WebView main content presentation:</p>\n<ul>\n<li><code>baseURL</code>. Sets the URL that the web content's paths will be relative to.</li>\n<li><code>mimeType</code>. Sets the MIME type for the content. Defaults to &quot;text/html&quot; if not specified.</li>\n</ul>\n<p>For example:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token function\">setHtml</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>&lt;body>Hello, &lt;a href=\"/documentation\">Titanium&lt;/a>!&lt;/body>&lt;/html>'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> baseURL<span class=\"token operator\">:</span> <span class=\"token string\">'https://developer.appcelerator.com/'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend-->","platforms":[{"since":"8.1.0","name":"android"},{"since":"2.0.0","name":"iphone"},{"since":"2.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"parameters":[{"name":"html","summary":"<p>New HTML to display in the web view.</p>\n","type":"String"},{"name":"options","summary":"<p>Optional parameters for the content. Only used by iOS and Android.</p>\n","type":"setHtmlOptions","optional":true}],"returns":{"type":"void"}},{"name":"startListeningToProperties","summary":"<p>Add native properties for observing for change.</p>\n","description":"<p>Some common properties are title, URL, estimatedProgress etc.\nSee native KVO capability at https://developer.apple.com/documentation/webkit/wkwebview.\nSee example section &quot;Listening to Web View properties in iOS&quot; for usage.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"propertyList","summary":"<p>List of properties for listen.</p>\n","type":"Array<String>"}],"returns":{"type":"void"}},{"name":"stopListeningToProperties","summary":"<p>Remove native properties from observing.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"propertyList","summary":"<p>List of properties to remove.</p>\n","type":"Array<String>"}],"returns":{"type":"void"}},{"name":"stopLoading","summary":"<p>Stops loading a currently loading page.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"returns":{"type":"void"}},{"name":"takeSnapshot","summary":"<p>Takes a snapshot of the view's visible viewport.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"callback","summary":"<p>Function to call upon snapshot captured.</p>\n","type":"Callback<SnapshotResult>"}],"returns":{"type":"void"}}],"properties":[{"name":"allowedURLSchemes","summary":"<p>List of allowed URL schemes for the web view.</p>\n","description":"<p>See the example section &quot;Usage of allowedURLSchemes and handleurl in iOS&quot;.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Array<String>"},{"name":"allowsBackForwardNavigationGestures","summary":"<p>A Boolean value indicating whether horizontal swipe gestures will trigger back-forward list navigations.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"allowsLinkPreview","summary":"<p>A Boolean value that determines whether pressing on a link displays a preview of the\ndestination for the link.</p>\n","description":"<p>This property is available on devices that support 3D Touch. Default value is <code>false</code>.</p>\n<p>If you set this value to <code>true</code> for a web view, users (with devices that support 3D Touch)\ncan preview link destinations, and can preview detected data such as addresses, by pressing on links.\nSuch previews are known to users as peeks. If a user presses deeper, the preview navigates (or pops,\nin user terminology) to the destination. Because pop navigation switches the user from your app to\nSafari, it is opt-in, by way of this property, rather default behavior for this class.</p>\n","platforms":[{"since":"5.4.0","name":"iphone"},{"since":"5.4.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"assetsDirectory","summary":"<p>Path of file or directory to allow read access by the WebView.</p>\n","description":"<p>Use this property to change the resources the web view has access to when loading the content of a local file.\nBy default the web view only has access to files inside the same directory as the loaded file. To reference\nresources from other directories (e.g. a parent directory) change this property accordingly.</p>\n<p>If assetsDirectory references a single file, only that file may be loaded. If assetsDirectory references a\ndirectory, files inside that directory may be loaded.</p>\n<p>This property needs to be set before <a href=\"/api/titanium/ui/webview.html#url\">url</a> is assigned to a local file.</p>\n","platforms":[{"since":"9.0.0","name":"iphone"},{"since":"9.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"blacklistedURLs","deprecated":{"notes":"<p>Use the <a href=\"/api/titanium/ui/webview.html#blockedurls\">blockedURLs</a> property instead.</p>\n","since":"9.2.0"},"summary":"<p>An array of url strings to blacklist.</p>\n","description":"<p>An array of url strings to blacklist. This will stop the webview from going to urls listed in\nthe blacklist. Note, this only applies in the links clicked inside the webview. The first website\nthat is loaded will not be stopped even if it matches the blacklist.</p>\n","platforms":[{"since":"5.4.0","name":"android"},{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Array<String>","availability":"creation"},{"name":"blockedURLs","summary":"<p>An array of url strings to be blocked.</p>\n","description":"<p>An array of url strings to be blocked from loading. This will stop the webview from going to urls\nlisted in this array. Note that this only applies to the links tapped on by the end-user.\nThe first website that is loaded will not be stopped, even if it is listed in the blocklist.</p>\n","platforms":[{"since":"9.2.0","name":"android"},{"since":"9.2.0","name":"iphone"},{"since":"9.2.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Array<String>","availability":"creation"},{"name":"cacheMode","summary":"<p>Determines how a cache is used in this web view.</p>\n","platforms":[{"since":"3.2.0","name":"android"}],"type":"Number","default":"<Titanium.UI.Android.WEBVIEW_LOAD_DEFAULT>","constants":["Titanium.UI.Android.WEBVIEW_LOAD_DEFAULT","Titanium.UI.Android.WEBVIEW_LOAD_NO_CACHE","Titanium.UI.Android.WEBVIEW_LOAD_CACHE_ONLY","Titanium.UI.Android.WEBVIEW_LOAD_CACHE_ELSE_NETWORK"]},{"name":"cachePolicy","summary":"<p>The cache policy for the request.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","constants":["Titanium.UI.iOS.CACHE_POLICY_USE_PROTOCOL_CACHE_POLICY","Titanium.UI.iOS.CACHE_POLICY_RELOAD_IGNORING_LOCAL_CACHE_DATA","Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_ELSE_LOAD","Titanium.UI.iOS.CACHE_POLICY_RETURN_CACHE_DATA_DONT_LOAD"]},{"name":"configuration","summary":"<p>The configuration for the new web view.</p>\n","description":"<p>This property can only be set when creating the webview and will be ignored when set afterwards.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Titanium.UI.iOS.WebViewConfiguration"},{"name":"data","summary":"<p>Web content to load.</p>\n","description":"<p>Android only supports loading data from a <code>Blob</code>, not a <code>File</code>.</p>\n<p>See also: <a href=\"/api/titanium/ui/webview.html#url\">url</a> and <a href=\"/api/titanium/ui/webview.html#html\">html</a>.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":["Titanium.Blob","Titanium.Filesystem.File"]},{"name":"disableBounce","summary":"<p>Determines whether the view will bounce when scrolling to the edge of the scrollable region.</p>\n","description":"<p>Set to <code>true</code> to disable the bounce effect.</p>\n","platforms":[{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"disableContextMenu","summary":"<p>Determines whether or not the webview should not be able to display the context menu.</p>\n","description":"<p>Set to <code>true</code> to disable the context menu. Note that disabling the context menu will\nalso disable the text selection on iOS.</p>\n","platforms":[{"since":"6.1.0","name":"android"},{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"enableJavascriptInterface","summary":"<p>Enable adding javascript interfaces internally to webview prior to JELLY_BEAN_MR1 (Android 4.2)</p>\n","description":"<p>This property is introduced to prevent a security issue with older devices (&lt; JELLY_BEAN_MR1)</p>\n","platforms":[{"since":"3.6.0","name":"android"}],"type":"Boolean","availability":"creation","default":true},{"name":"enableZoomControls","summary":"<p>If <code>true</code>, zoom controls are enabled.</p>\n","platforms":[{"since":"1.8.0","name":"android"}],"type":"Boolean","default":true},{"name":"handlePlatformUrl","deprecated":{"notes":"<p>This property in no more supported in Titanium SDK 8.0.0+. Use property <a href=\"/api/titanium/ui/webview.html#allowedurlschemes\">allowedURLSchemes</a>\nin conjuction with <a href=\"/api/titanium/ui/webview.html#handleurl\">handleurl</a>. See the example section\n&quot;Usage of allowedURLSchemes and handleurl in iOS&quot;.</p>\n","since":"8.0.0"},"summary":"<p>Lets the webview handle platform supported urls</p>\n","description":"<p>By default any urls that are not handled by the Titanium platform but can be handled by the\nshared application are automatically sent to the shared application and the webview does not\nopen these. When this property is set to <code>true</code> the webview will attempt to handle these\nurls and they will not be sent to the shared application. An example is links to telephone\nnumbers.</p>\n","platforms":[{"since":"3.3.0","name":"iphone"},{"since":"3.3.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":"undefined. Behaves as if false"},{"name":"hideLoadIndicator","summary":"<p>Hides activity indicator when loading remote URL.</p>\n","platforms":[{"since":"3.0.0","name":"iphone"},{"since":"3.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"html","summary":"<p>HTML content of this web view.</p>\n","description":"<p>See <a href=\"/api/titanium/ui/webview.html#sethtml\">setHtml</a> for additional parameters that can be\nspecified when setting HTML content.</p>\n<p>The web view's content can also be set using the <a href=\"/api/titanium/ui/webview.html#data\">data</a> or\n<a href=\"/api/titanium/ui/webview.html#url\">url</a> properties.</p>\n<p>See also: <a href=\"/api/titanium/ui/webview.html#data\">data</a> and <a href=\"/api/titanium/ui/webview.html#url\">url</a>.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"String"},{"name":"ignoreSslError","summary":"<p>Controls whether to ignore invalid SSL certificates or not.</p>\n","description":"<p>If set to <code>true</code>, the web page loads despite having an invalid SSL certificate.\nIf set to <code>false</code>, a web page with an invalid SSL certificate does not load.</p>\n<p>iOS Note: As soon as you set this property to <code>true</code>, iOS will cache the response\nfor the lifetime of the current web view.</p>\n","platforms":[{"since":"3.0.0","name":"android"},{"since":"6.0.2","name":"iphone"},{"since":"6.0.2","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":"undefined but behaves as false"},{"name":"keyboardDisplayRequiresUserAction","summary":"<p>A Boolean value indicating whether web content can programmatically display the keyboard.</p>\n","description":"<p>When this property is set to true, the user must explicitly tap the elements in the web view\nto display the keyboard (or other relevant input view) for that element. When set to false,\na focus event on an element causes the input view to be displayed and associated with\nthat element automatically.</p>\n","platforms":[{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":"undefined but behaves as true"},{"name":"lightTouchEnabled","summary":"<p>Enables using light touches to make a selection and activate mouseovers.</p>\n","description":"<p>Setting this property solves the problem of web links with specific length not triggering a link click in Android.</p>\n<p>This is only an Android specific property and has no effect starting from API level 18.</p>\n<p>This flag is <code>true</code> by default to retain backwards compatibility with previous\nbehavior.</p>\n","platforms":[{"since":"3.2.0","name":"android"}],"type":"Boolean","default":true},{"name":"loading","summary":"<p>Indicates if the webview is loading content.</p>\n","platforms":[{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"Boolean"},{"name":"mixedContentMode","summary":"<p>If <code>true</code>, allows the loading of insecure resources from a secure origin.</p>\n","description":"<p>On iOS this functionality can be set in the <code>&lt;plist&gt;</code> section of the tiapp.xml\nusing the <code>NSAllowsArbitraryLoads</code> key as part of the App Transport Security.\nThe plist key is enabled by default, allowing arbitrary loads to be processed.</p>\n","platforms":[{"since":"7.5.0","name":"android"}],"type":"Boolean","availability":"creation","default":false},{"name":"onCreateWindow","summary":"<p>Callback function called when there is a request for the application to create a new window\nto host new content.</p>\n","description":"<p>For example, the request is triggered if a web page wants to open a URL in a new\nwindow.  By default, Titanium will open a new full-size window to host the new content.\nUse the callback to override the default behavior.</p>\n<p>The callback needs to create a new WebView object to host the content in and add the WebView to the\napplication UI. The callback must return either a WebView object to host the content in or <code>null</code> if\nit does not wish to handle the request.</p>\n<p>The callback is passed a dictionary with two boolean properties:</p>\n<ul>\n<li><code>isDialog</code>: set to true if the content should be opened in a dialog window rather than a\nfull-size window.</li>\n<li><code>isUserGesture</code>: set to true if the user initiated the request with a gesture, such as\ntapping a link.</li>\n</ul>\n<p>The following example opens new web content in a new tab rather than a new window:</p>\n<!--beforebegin--><div class=\"language-js extra-class\"><!--afterbegin--><pre v-pre class=\"language-js\"><code><span class=\"token keyword\">var</span> tabGroup <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTabGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    win <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    tab <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTab</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>window<span class=\"token operator\">:</span> win<span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'Start Page'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    webview <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWebView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span><span class=\"token string\">'index.html'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwebview<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateWindow</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> newWin <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        newWebView <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWebView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        newTab <span class=\"token operator\">=</span> Ti<span class=\"token punctuation\">.</span><span class=\"token constant\">UI</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTab</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>window<span class=\"token operator\">:</span> newWin<span class=\"token punctuation\">,</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'New Page'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    newWin<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>newWebView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tabGroup<span class=\"token punctuation\">.</span><span class=\"token function\">addTab</span><span class=\"token punctuation\">(</span>newTab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> newWebView<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nwin<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>webview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntabGroup<span class=\"token punctuation\">.</span><span class=\"token function\">addTab</span><span class=\"token punctuation\">(</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntabGroup<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<!--beforeend--></div><!--afterend-->","platforms":[{"since":"2.1.0","name":"android"}],"type":"Callback<Object>"},{"name":"onlink","summary":"<p>Fired before navigating to a link.</p>\n","description":"<p>The callback will be called before navigating to the link. The Boolean return value of the\ncallback will determine if the link will be navigated or discarded.</p>\n","platforms":[{"since":"7.5.0","name":"android"},{"since":"7.5.0","name":"iphone"},{"since":"7.5.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Callback<OnLinkURLResponse>"},{"name":"overScrollMode","summary":"<p>Determines the behavior when the user overscrolls the view.</p>\n","platforms":[{"since":"3.1.0","name":"android"}],"type":"Number","default":"Titanium.UI.Android.OVER_SCROLL_ALWAYS","constants":["Titanium.UI.Android.OVER_SCROLL_ALWAYS","Titanium.UI.Android.OVER_SCROLL_IF_CONTENT_SCROLLS","Titanium.UI.Android.OVER_SCROLL_NEVER"]},{"name":"pluginState","summary":"<p>Determines how to treat content that requires plugins in this web view.</p>\n","description":"<p>This setting affects the loading of content that requires web plugins.</p>\n<p>To enable hardware acceleration, add the <code>tool-api-level</code> and\n<code>manifest</code> elements shown below inside the <code>android</code> element in your <code>tiapp.xml</code> file.</p>\n<!--beforebegin--><div class=\"language-xml extra-class\"><!--afterbegin--><pre v-pre class=\"language-xml\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>android</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>android</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.android.com/apk/res/android<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>tool-api-level</span><span class=\"token punctuation\">></span></span>11<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>tool-api-level</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>manifest</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>application</span> <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>hardwareAccelerated</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>manifest</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>android</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>See Android documentation for\n<a href=\"https://developer.android.com/reference/android/webkit/WebSettings.PluginState.html\">WebSettings.PluginState</a>.</p>\n<p>This property only works on Android devices at API Level 8 or greater.</p>\n","platforms":[{"since":"1.8.0","name":"android"}],"type":"Number","default":"<Titanium.UI.Android.WEBVIEW_PLUGINS_OFF>","constants":["Titanium.UI.Android.WEBVIEW_PLUGINS_OFF","Titanium.UI.Android.WEBVIEW_PLUGINS_ON","Titanium.UI.Android.WEBVIEW_PLUGINS_ON_DEMAND"]},{"name":"progress","summary":"<p>An estimate of what fraction of the current navigation has been loaded.</p>\n","description":"<p>This value ranges from 0.0 to 1.0 based on the total number of bytes expected\nto be received, including the main document and all of its potential subresources.\nAfter loading completes, the progress remains at 1.0 until a new download starts,\nat which point progress is reset to 0.0.</p>\n","platforms":[{"since":"9.1.0","name":"android"},{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","permission":"read-only"},{"name":"requestHeaders","summary":"<p>Sets extra request headers for this web view to use on subsequent URL requests.</p>\n","description":"<p>Setting this property allows you to set custom headers to the URL requests.\nThe parameter will be key-value pairs: <code>{&quot;Custom-field1&quot;:&quot;value1&quot;, &quot;Custom-field2&quot;:&quot;value2&quot;}</code></p>\n<p>On Android you should avoid Calling <code>setRequestHeaders()</code> right after <code>createWebView()</code>. Use the <code>requestHeaders</code> property\ninside <code>createWebView()</code> or put it inside the window <code>open</code> event.</p>\n","platforms":[{"since":"6.1.0","name":"android"},{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Dictionary"},{"name":"scalesPageToFit","summary":"<p>If <code>true</code>, scale contents to fit the web view.</p>\n","description":"<p>On iOS, setting this to <code>true</code> sets the initial zoom level to show the entire\npage, and enables the user to zoom the web view in and out. Setting this to\n<code>false</code> prevents the user from zooming the web view.</p>\n<p>On Android, only controls the initial zoom level.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":"`false` on iOS. On Android, `false` when content is specified as a local URL,\n`true` for any other kind of content (remote URL, `Blob`, or `File`).\n"},{"name":"scrollsToTop","summary":"<p>Controls whether the scroll-to-top gesture is effective.</p>\n","description":"<p>The scroll-to-top gesture is a tap on the status bar; The default value of this property is true.\nThis gesture works when you have a single visible web view.\nIf there are multiple table views, web views, text areas, and/or scroll views visible,\nyou will need to disable (set to false) on the above views you DON'T want this\nbehaviour on. The remaining view will then respond to scroll-to-top gesture.</p>\n","platforms":[{"since":"2.0.0","name":"iphone"},{"since":"2.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":true},{"name":"secure","summary":"<p>A Boolean value indicating whether all resources on the page have been loaded through\nsecurely encrypted connections.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","permission":"read-only"},{"name":"selectionGranularity","summary":"<p>The level of granularity with which the user can interactively select content in the web view.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","permission":"read-only","constants":["Titanium.UI.iOS.SELECTION_GRANULARITY_DYNAMIC","Titanium.UI.iOS.SELECTION_GRANULARITY_CHARACTER"]},{"name":"timeout","summary":"<p>The timeout interval for the request, in seconds.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number"},{"name":"title","summary":"<p>Returns page title of webpage.</p>\n","platforms":[{"since":"8.0.0","name":"iphone"},{"since":"8.0.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String","permission":"read-only"},{"name":"url","summary":"<p>URL to the web document.</p>\n","description":"<p>This property changes as the content of the webview changes (such as when the user\nclicks a hyperlink inside the web view).</p>\n<p>See also: <a href=\"/api/titanium/ui/webview.html#data\">data</a> and <a href=\"/api/titanium/ui/webview.html#html\">html</a>.</p>\n","platforms":[{"since":"0.8","name":"android"},{"since":"0.8","name":"iphone"},{"since":"0.8","name":"ipad"},{"since":"9.2.0","name":"macos"},{"since":"4.1.0","name":"windowsphone"}],"type":"String"},{"name":"userAgent","summary":"<p>The User-Agent header used by the web view when requesting content.</p>\n","description":"<p>On the iOS platform, this is not per-webview. Once you have set this property for a webview\nit will not change for same. But while creating new webview it can be changed to new user agent.</p>\n<p>On Android, changing the user agent after the webview has begun loading content may cause\nthe webview to reload and fire multiple <code>load</code> or <code>beforeload</code> events. Developers should provide the\nuser agent value in the creation properties to avoid the reload and multiple events firing.</p>\n","platforms":[{"since":"2.0.0","name":"android"},{"since":"6.1.0","name":"iphone"},{"since":"6.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String","default":"System default user-agent value."},{"name":"willHandleTouches","summary":"<p>Explicitly specifies if this web view handles touches.</p>\n","description":"<p>On the iOS platform, if this web view <strong>or any of its parent views</strong> have touch\nlisteners, the Titanium component intercepts <strong>all</strong> touch events. This\nprevents the user from interacting with the native web view components.</p>\n<p>Set this flag to <code>false</code> to disable the default behavior. Setting this property to <code>false</code>\nallows the user to interact with the native web view and still honor any <code>touch</code> events sent to\nits parents. No <code>touch</code> events will be generated when the user interacts with the web view itself.</p>\n<p>Set this flag to <code>true</code> if you want to receive touch events from the web view and\nthe user does not need to interact with the web content directly.</p>\n<p>This flag is <code>true</code> by default to retain backwards compatibility with previous\nbehavior.</p>\n","platforms":[{"since":"1.8.2","name":"iphone"},{"since":"1.8.2","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":true},{"name":"zoomLevel","summary":"<p>Manage the zoom-level of the current page.</p>\n","platforms":[{"since":"7.3.0","name":"android"},{"since":"7.3.0","name":"iphone"},{"since":"7.3.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","default":"undefined. Behaves as no zoom applied."}],"subtype":"view","constants":[]}
