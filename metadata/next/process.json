{"name":"process","summary":"<p>A Node.js-compatible implementation of the core <code>process</code> module</p>\n","extends":"EventEmitter","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"pseudo","editUrl":"https://github.com/appcelerator/titanium_mobile/edit/master/apidoc/NodeJS/process.yml","events":[{"name":"uncaughtException","summary":"<p>The <code>'uncaughtException'</code> event is emitted when an uncaught JavaScript exception bubbles all the way back to the event loop.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"err","summary":"<p>The uncaught exception.</p>\n","type":"Error"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]},{"name":"warning","summary":"<p>The <code>'warning'</code> event is emitted whenever Node.js emits a <code>process</code> warning.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"properties":[{"name":"warning","summary":"<p>The warning thrown.</p>\n","type":"Error"},{"name":"bubbles","summary":"<p>True if the event will try to bubble up if possible.</p>\n","type":"Boolean"},{"name":"cancelBubble","summary":"<p>Set to true to stop the event from bubbling.</p>\n","type":"Boolean"},{"name":"source","summary":"<p>Source object that fired the event.</p>\n","type":"Object"},{"name":"type","summary":"<p>Name of the event fired.</p>\n","type":"String"}]}],"methods":[{"name":"abort","summary":"<p>No-op on Titanium</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"binding","summary":"<p>This is not intended as user-facing API and will throw an <code>Error</code> if invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"chdir","summary":"<p>This is unsupported on Titanium and will throw an <code>Error</code> if invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"cpuUsage","summary":"<p>Returns a dummy object with <code>0</code>-ed out values.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"Object"}},{"name":"cwd","summary":"<p>Returns the value of <code>__dirname</code> on Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"String"}},{"name":"disconnect","summary":"<p>No-op on Titanium</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"dlopen","summary":"<p>This is unsupported on Titanium and will throw an <code>Error</code> if invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"emitWarning","summary":"<p>The <code>process.emitWarning()</code> method can be used to emit custom or application specific process warnings. These can be listened for by adding a handler to the <code>'warning'</code> event.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"parameters":[{"name":"warning","summary":"<p>The warning to emit.</p>\n","type":["String","Error"]},{"name":"options","summary":"<p>When <code>warning</code> is a <code>String</code>, <code>type</code> is the name to use for the type of warning being emitted.</p>\n","type":["String","EmitWarningOptions"],"optional":true},{"name":"code","summary":"<p>A unique identifier for the warning instance being emitted.</p>\n","type":"String","optional":true},{"name":"ctor","summary":"<p>When <code>warning</code> is a <code>String</code>, <code>ctor</code> is an optional function used to limit the generated stack trace.</p>\n","type":"Function","optional":true}],"returns":{"type":"void"}},{"name":"exit","summary":"<p>This is unsupported on Titanium and will throw an <code>Error</code> if invoked.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"void"}},{"name":"umask","summary":"<p>No-op on Titanium. Will always return <code>0</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"Number"}},{"name":"uptime","summary":"<p>The <code>process.uptime()</code> method returns the number of seconds the current Node.js process has been running.</p>\n<p>The return value includes fractions of a second. Use <code>Math.floor()</code> to get whole seconds.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"returns":{"type":"Number"}}],"properties":[{"name":"arch","summary":"<p>Returns the operating system CPU architecture for which the binary was compiled. Possible values are return <code>'arm'</code>, <code>'arm64'</code>, <code>'ia32'</code>, <code>'x64'</code>, <code>'mips'</code>, and <code>'unknown'</code>.</p>\n<p>The return value is equivalent to <a href=\"/api/structs/os.html#arch\">arch</a>. Relates strongly to <a href=\"/api/titanium/platform.html#architecture\">architecture</a>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"argv","summary":"<p>The <code>process.argv</code> property returns an array containing the command-line arguments passed when the Node.js process was launched.\nThe first element will be <code>process.execPath</code>. See <a href=\"/api/structs/process.html#argv0\">argv0</a> if access to the original value of <code>argv[0]</code> is needed.\nThe second element will be the path to the JavaScript file being executed.\nThe remaining elements will be any additional command-line arguments.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Array<String>"},{"name":"argv0","summary":"<p>The <code>process.argv0</code> property stores a read-only copy of the original value of <code>argv[0]</code> passed when Node.js starts.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String","permission":"read-only","value":""},{"name":"channel","summary":"<p>Always <code>undefined</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object","value":"undefined"},{"name":"config","summary":"<p>Always <code>{}</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object"},{"name":"connected","summary":"<p>Always <code>false</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","value":false},{"name":"debugPort","summary":"<p>The port used by the debugger when enabled.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number"},{"name":"env","summary":"<p>This is an object whose keys are environment variable names and whose values are the related environmnet variable values.</p>\n<p>In Titanium, we will pass along environment variables from the system/CLI to the app for <code>'development'</code> builds,\n<em>but will not do so for <code>'production'</code> builds!</em></p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object"},{"name":"execArgv","summary":"<p>Always <code>[]</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Array<String>"},{"name":"execPath","summary":"<p>Always <code>''</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"exitCode","summary":"<p>Unused in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","value":"undefined"},{"name":"noDeprecation","summary":"<p>The <code>process.noDeprecation</code> property indicates whether the <code>--no-deprecation</code> flag is set on the current Node.js process. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information about this flag's behavior.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"pid","summary":"<p>The <code>process.pid</code> property returns the PID of the process. Always returns <code>0</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","value":0},{"name":"platform","summary":"<p>Equivalent to <a href=\"/api/titanium/platform.html#osname\">osname</a></p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"ppid","summary":"<p>The <code>process.ppid</code> property returns the PID of the parent of the current process. Always returns <code>0</code> in Titanium.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Number","value":0},{"name":"stderr","summary":"<p>The <code>process.stderr</code> property returns a stream connected to <code>stderr</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object"},{"name":"stdout","summary":"<p>The <code>process.stdout</code> property returns a stream connected to <code>stdout</code>.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object"},{"name":"throwDeprecation","summary":"<p>The initial value of <code>process.throwDeprecation</code> indicates whether the <code>--throw-deprecation</code> flag is set on the current Node.js process. process.throwDeprecation is mutable, so whether or not deprecation warnings result in errors may be altered at runtime. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"title","summary":"<p>Equivalent to <a href=\"/api/titanium/app.html#name\">name</a></p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"traceDeprecation","summary":"<p>The <code>process.traceDeprecation</code> property indicates whether the <code>--trace-deprecation</code> flag is set on the current Node.js process. See the documentation for the <code>'warning'</code> event and the <code>emitWarning()</code> method for more information about this flag's behavior.</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Boolean","default":false},{"name":"version","summary":"<p>Equivalent to <a href=\"/api/titanium.html#version\">version</a></p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"String"},{"name":"versions","summary":"<p>An object containing version information for included dependencies</p>\n","platforms":[{"since":"8.1.0","name":"android"},{"since":"8.1.0","name":"iphone"},{"since":"8.1.0","name":"ipad"},{"since":"9.2.0","name":"macos"}],"type":"Object"}],"constants":[]}
